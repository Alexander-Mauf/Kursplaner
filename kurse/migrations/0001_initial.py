# Generated by Django 4.1.4 on 2022-12-21 19:35

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Availability',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('availability', models.CharField(choices=[('verfügbar', 'verfügbar'), ('nicht verfügbar', 'nicht verfügbar'), ('nur Notfälle', 'nur Notfälle'), ('unklar', 'unklar')], default='nicht verfügbar', max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Class',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('ski-alpin', 'ski-alpin'), ('snowboard', 'snowboard'), ('langlauf', 'langlauf'), ('telemark', 'telemark')], max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Skills',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ski_alpin', models.CharField(choices=[('Beginner', 'Beginner'), ('Level 1', 'Level 1'), ('Level 2', 'Level 2'), ('Level 3', 'Level 3'), ('Level 4', 'Level 4'), ('Level 5', 'Level 5'), ('Level 6', 'Level 6'), ('Level 7', 'Level 7')], default='Beginner', max_length=255)),
                ('snowboard', models.CharField(choices=[('Beginner', 'Beginner'), ('Level 1', 'Level 1'), ('Level 2', 'Level 2'), ('Level 3', 'Level 3'), ('Level 4', 'Level 4'), ('Level 5', 'Level 5'), ('Level 6', 'Level 6'), ('Level 7', 'Level 7')], default='Beginner', max_length=255)),
                ('ski_cross_country', models.CharField(choices=[('Beginner', 'Beginner'), ('Level 1', 'Level 1'), ('Level 2', 'Level 2'), ('Level 3', 'Level 3'), ('Level 4', 'Level 4'), ('Level 5', 'Level 5'), ('Level 6', 'Level 6'), ('Level 7', 'Level 7')], default='Beginner', max_length=255)),
                ('ski_tele', models.CharField(choices=[('Beginner', 'Beginner'), ('Level 1', 'Level 1'), ('Level 2', 'Level 2'), ('Level 3', 'Level 3'), ('Level 4', 'Level 4'), ('Level 5', 'Level 5'), ('Level 6', 'Level 6'), ('Level 7', 'Level 7')], default='Beginner', max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Vorname')),
                ('surname', models.CharField(blank=True, max_length=255, null=True, verbose_name='Nachname')),
                ('has_licence', models.BooleanField(default=False)),
                ('can_ski_alpin', models.BooleanField(default=False)),
                ('can_snowboard', models.BooleanField(default=False)),
                ('can_ski_cross_country', models.BooleanField(default=False)),
                ('can_ski_telemark', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Timeslot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('slot', models.CharField(choices=[('09:00-10:00', '09:00-10:00'), ('10:00-12:00', '10:00-12:00'), ('12:00-13:00', '12:00-13:00'), ('13:30-15:30', '13:30-15:30'), ('15:30-16:30', '15:30-16:30'), ('Außerplanmäßig', 'Außerplanmäßig')], default='10:00-12:00', max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('skills_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='kurse.skills')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Vorname')),
                ('surname', models.CharField(blank=True, max_length=255, null=True, verbose_name='Nachname')),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            bases=('kurse.skills', models.Model),
        ),
        migrations.AddIndex(
            model_name='timeslot',
            index=models.Index(fields=['date'], name='kurse_times_date_f4d280_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='timeslot',
            unique_together={('date', 'slot')},
        ),
        migrations.AddField(
            model_name='class',
            name='teacher',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='kurse.teacher'),
        ),
        migrations.AddField(
            model_name='class',
            name='timeslot',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='kurse.timeslot'),
        ),
        migrations.AddField(
            model_name='availability',
            name='slot',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='kurse.timeslot'),
        ),
        migrations.AddField(
            model_name='availability',
            name='teacher',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='kurse.teacher'),
        ),
        migrations.AddField(
            model_name='class',
            name='students',
            field=models.ManyToManyField(blank=True, related_name='students', to='kurse.customer'),
        ),
        migrations.AddIndex(
            model_name='availability',
            index=models.Index(fields=['teacher'], name='kurse_avail_teacher_481743_idx'),
        ),
    ]
